datasource db {
  provider = "mysql"
  url      = "mysql://root:Kakarakaya&89Vepudu$56@localhost:3306/mydb"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "darwin", "darwin-arm64"]
}

model User {
  key   Int    @id @unique @default(autoincrement())
  fname String
  lname String
  uname String
  pass  String
}

model Event {
  key        String    @id @unique
  name       String
  type       EventType @default(DISTRICT)
  start_date DateTime
  end_date   DateTime

  teams     Team[]
  matches   Match[]
  alliances Alliance[]
  pitEntrys PitEntry[]

  updated DateTime @default(now()) @updatedAt
  created DateTime
}

model Match {
  key String @id @unique

  event   Event  @relation(fields: [eventId], references: [key])
  eventId String

  alliances Alliance[]
  schedules Schedule[]
  // matchEntries MatchEntry[]
}

model Schedule {
  //freestanding
  key      Int    @id @unique @default(autoincrement())
  uname    String
  position Int

  //relations
  match   Match  @relation(references: [key], fields: [matchId])
  matchId String
}

model Alliance {
  id         Int           @id @unique @default(autoincrement())
  event      Event         @relation(fields: [eventId], references: [key])
  eventId    String
  teams      Team[]
  match      Match         @relation(references: [key], fields: [matchId])
  matchId    String
  color      AllianceColor
  matchColor String        @unique // match.key + alliance.color
}

model Team {
  tba_key     String     @id @unique
  team_number Int        @unique
  nickname    String
  logo        String?    @db.Text
  alliance    Alliance[]
  events      Event[]
  // matchEntrys MatchEntry[]
  pitEntrys   PitEntry[]
}

enum EventType {
  DISTRICT
  REGIONAL
  WORLD
  SCRIMMAGE
  OTHER
}

enum MatchType {
  PRACTICE
  QUALIFICATION
  ELIMINATION
  OTHER
}

enum AllianceColor {
  BLUE
  RED
}

model MatchEntry {
  id String @id @unique @default(uuid())

  //general info
  match_num   Int
  name        String
  team_number Int
  scouter_num Int    @default(0)

  //put data to be collected here

  //auto
  a_start_posit Int
  a_left_start  Boolean

  a_coral_first  Int @default(0)
  a_coral_second Int @default(0)
  a_coral_third  Int @default(0)
  a_coral_fourth Int @default(0)

  a_net  Int @default(0)
  a_proc Int @default(0)

  //tele

  t_coral_first  Int @default(0)
  t_coral_second Int @default(0)
  t_coral_third  Int @default(0)
  t_coral_fourth Int @default(0)

  t_net  Int @default(0)
  t_proc Int @default(0)

  t_climb   Int @default(0)
  t_endgame Int @default(0)

  t_ground_coral Int @default(0)
  t_ground_algae Int @default(0)

  //general

  failed        Boolean
  ground_pickup Int     @default(0)
  defense       Int
  driver_perf   Int
  tippiness     Int

  comments String? @db.VarChar(3000)

  updated DateTime @default(now()) @updatedAt
  created DateTime @default(now())
}

model PitEntry {
  id          String @id @unique @default(uuid())
  team        Team   @relation(fields: [team_number], references: [team_number])
  team_number Int

  drive_type Int // swerve, tank, westcoast
  auto_pts   Int

  hang_cap Boolean
  trap_cap Boolean

  gp_level Int
  comments String

  mercy Boolean @default(false)

  event     Event  @relation(fields: [event_key], references: [key])
  event_key String

  updated DateTime @default(now()) @updatedAt
  created DateTime @default(now())
}

model Server {
  id            String  @id @unique @default(uuid())
  name          String
  team          Int
  desc          String  @default("")
  api           String
  endpoint      String
  auth_required Boolean
}
